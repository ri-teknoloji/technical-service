// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          String   @id @default(uuid())
    username    String   @unique @default(cuid())
    email       String   @unique
    phoneNumber String   @unique
    password    String
    displayName String
    roles       String[] @default(["user"])
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    Token         Token[]
    ServiceRecord ServiceRecord[]

    @@map("users")
}

model Token {
    id        String   @id @default(uuid())
    token     String   @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    expiresAt DateTime
    // User relation
    userId    String
    User      User     @relation(fields: [userId], references: [id])

    @@map("tokens")
}

model Event {
    id              String        @id @default(uuid())
    title           String
    description     String
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt
    // ServiceRecord relation
    serviceRecordId String
    ServiceRecord   ServiceRecord @relation(fields: [serviceRecordId], references: [id])

    @@map("events")
}

model ServiceRecord {
    id          String   @id @default(uuid())
    productName String
    images      String[] @default([])
    status      String   @default("pending")
    events      Event[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    userId      String
    User        User     @relation(fields: [userId], references: [id])

    @@map("service_records")
}
